*********** ЗАДАНИЕ 4 *********** 
*********** Обнаружение точечных признаков на изображениях с помощью детектора Харриса (детектор угловых признаков, угловых точек)
*********** Результат - две папки с изображениями. Один набор представляет вычисленные угловые признаки, другой - входные 
*********** изображения с помеченными пикселами, в которых обнаружены "значимые" угловые признаки.

4.1) Использовать видеопоследовательность с дорожной сценой, обрабатывать каждое 5 изображение.

4.2) Преобразовать изображение в полутоновое (как и раньше).

4.3) Вычислить изображение, содержащее угловые признаки (это числовое изображение, которое может содержать произвольные
     вещественные значения).
     cornerImg = cv2.cornerHarris( srcGrayImg, # входное полутоновое изображение
                                   2,          # размер области для вычисления собственных чисел матрицы
                                               # из производных яркости (blockSize = 2)
                                   3,          # Размер окрестности (апертура) для вычисления производной яркости.
                                               # В OpenCV это делается с помощью оператора Собеля.
                                   0.04        # Константа из определения функции отклика Харриса k = [0.04, 0.15]                              
                                  )

4.4) Преобразовать изображение с угловыми признаками в полутоновое, с масштабированием значений в диапазон [0, 255].
     # Нормализация - преобразование вещественного изображения cornerImg в вещественное изображение normImg со значениями [0, 255]
     normImg = cv2.normalize( cornerImg,        # src
                              None,             # dst
                              0,                # alpha
                              255,              # beta
                              cv2.NORM_MINMAX,  # norm type
                              cv2.CV_32FC1,     # dtype
                              None              # mask
                              )
     # Преобразование вещественного изображения в полутоновое [0, 255]
     grayCornerImg = cv2.convertScaleAbs( grayCornerImg )

4.5) Сохранить полутоновое изображение grayCornerImg с угловыми признаками в файле.

4.6) Выяснить диапазон значений в изображении grayCornerImg (например, вычислить мин/макс в цикле или 
     посмотреть на гистограмму в Photoshop или GIMP).

4.7) На входном цветном изображении красными окружностями радиусом 5 пикселей отобразить пикселы значения которых
     на изображении с угловыми признаками grayCornerImg превышают заданный порог (например, 1/4 от нижней границы).
     Это будут пикселы, в которых обнаружены "значимые" угловые признаки.
     Например, проверка может осуществляться так:
      if grayCornerImg[x,y] > 30 
        cv2.circle( srcImg, (x,y), 5, (0,0,255))

4.8) Сохранить изображение из п. 4.7) в файле.
