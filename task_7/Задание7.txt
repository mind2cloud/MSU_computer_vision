*********** ЗАДАНИЕ 7 *********** 
*********** Прослеживание точечных признаков с помощью разреженного оптического потока Лукаса-Кэнада. 
*********** Признаки для прослеживания вычисляются с помощью SIFT (как в Задании 6).
*********** Результат: отдельные изображения (каждый 5-й кадр) и видеопоследовательность (каждый кадр), текстовый файл-журнал
*********** Срок выполнения: до 7.11.2021
*********** Порядок выполнения: сначала реализовать прослеживание только в прямом направлении, после работоспособности - добавить
*********** проверку (4.1)

1) В качестве модели взять область с автомобилем из начала видеопоследовательности (например, 25-й кадр).

2) Аналогично Заданию 6, найти признаки модели на текущем кадре и если количество сопоставленных признаков больше порога (например, 15%),
   то считаем, что наш объект на кадре обнаружен. 

3) Если объект обнаружен, то перейти в режим прослеживания признаков. 
   Совпавшие признаки взять в качестве точечных признаков для прослеживания (массив p0)
   Для каждого точечного признака сохранять видимую траекторию (след). 
   Можно в массив укладывать координаты этих признаков для каждого кадра, на котором выполняется прослеживание.

4) Вызвать функцию вычисления оптического потока для обнаружения новых положений точек из p0.
   Т.е., вычислить новые положения точек p0 кадра img0 в виде точек p1 на кадре img1 - прослеживание в прямом направлении.
     cv.calcOpticalFlowPyrLK(img0 /* Предыдущий кадр, черно-белый */, 
                             img1 /* Текущий кадр, черно-белый */, 
                             p0,  /* Признаки на кадре img0 - исходные для прослеживания */
                             p1,  /* Признаки на кадре img1 - новые положения признаков p0 */
			     status, /* Вектор флагов - обозначают, какие из признаков были успешно прослежены */ )

4.1) Предусмотреть проверку (отключаемую) для повышения надежности обработки - обратное прослеживание:
     Вызвать функцию вычисления оптического потока для обнаружения положений точек p1 кадра img1 на предыдущем кадре img0.
     В качестве успешно прослеженных взять те точки из p1, которые попали в точки на кадре img0 в пределах допуска по 
     расстоянию в пределах порога (5 пикселов).   
  
5) Модифицировать (дополнить) следы признаков.

6) На текущем кадре построить все следы в виде ломаных линий. (Можно использовать cv.polylines). Положение признака на текущем кадре показать
   набольшой окружностью или квадратом.

7) Признаки, которые были успешно прослежены и обнаружены на текущем кадре использовать в качестве исходных на следующем (в качестве p0).

8) В отладочный журнал выдавать (только числа, пояснения - можно в первой строке):
   Номер кадра, количество исходных признаков для прослеживания (p0), 
   количество успешно прослеженных признаков в прямом направлении img0->img1,
   количество успешно прослеженных признаков в обратном направлении img1->img0 (если включена проверка 4.1),
   количество признаков, которые отобраны для дальнейшего прослеживания.
